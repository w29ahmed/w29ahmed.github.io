{"version":3,"sources":["webpack://src/components/styles/Header.scss","webpack://src/components/styles/_themes.scss","webpack://src/components/styles/About.scss","webpack://node_modules/bootstrap/scss/mixins/_breakpoints.scss","webpack://src/components/styles/Skills.scss","webpack://src/components/styles/_global.scss","webpack://src/components/styles/ExperienceCarousel.scss","webpack://src/components/styles/Experience.scss","webpack://src/components/styles/Projects.scss","webpack://src/components/styles/App.scss"],"names":[],"mappings":"AAEA,QACE,eAAgB,CADlB,uBAOI,eAAgB,CAChB,qBAAsB,CACtB,wBAAyB,CAC1B,oCALG,kBCDqB,CASvB,mCDRE,gBCEmB,CDPzB,6BAYI,WAAY,CEVhB,OACE,aAAc,CACf,kBAGC,aAAc,CACd,WAAY,CAIb,+BAFG,0BDNuB,CASvB,8BCHA,wBDHqB,CCOzB,gBAEI,YAAa,CACd,oCAKC,aDlBuB,CASvB,mCCSA,WDfqB,CEgErB,4BD3CF,aACE,aAAc,CACd,gBAAiB,CACjB,iBAAkB,CACnB,CAIH,qCACE,gBAEI,oBAAqB,CACtB,CEtCL,QACE,aCJ2B,CDG7B,WAII,cAAe,CAJnB,cAOM,aAAc,CAPpB,WAYI,gBAAiB,CAClB,aAID,cAAe,CACf,eAAgB,CACjB,YAGC,WAAY,CACb,YAGC,gBAAiB,CACjB,SAAU,CAIX,yBAFG,wBH3BuB,CASvB,wBGkBA,sBHxBqB,CEgErB,4BCnCF,wBAEI,kBAAmB,CACpB,CDgCD,4BC3BF,0BAEI,kBAAmB,CACpB,CAIL,oCACE,YACE,eAAiB,CAClB,WAIG,cAAe,CAChB,CEzDL,gCAEI,YAAa,CACb,kBAAmB,CAHvB,6CAOM,UAAW,CAPjB,4BAeI,WAAY,CACb,yCAHG,aLXqB,CASvB,wCKEE,WLRmB,CKLzB,sCAmBI,SAAU,CACV,0BAA2B,CApB/B,kFA2BI,SAAU,CACV,uBAAyB,CA5B7B,mFAoCI,SAAU,CACV,2BAA4B,CArChC,oFA4CI,SAAU,CACV,uBAAyB,CA7C7B,6CAgDI,SAAU,CACV,0BAA2B,CAjD/B,oLAwDI,sCAA0C,CAxD9C,iCA4DI,eAAgB,CA5DpB,gEAgEI,iBAAkB,CAhEtB,qCAoEI,eAAgB,CACjB,gDAIG,aLvEqB,CASvB,+CK8DE,WLpEmB,CKLzB,yCA8EI,eAAgB,CA9EpB,uCAkFI,YAAa,CACb,kBAAmB,CAnFvB,mCAuFI,WAAY,CACZ,gBAAiB,CACjB,UAAW,CCzFf,YACE,aFJ2B,CEG7B,eAII,cAAe,CAJnB,kBAOM,aAAc,CCPpB,UACE,aHJ2B,CGG7B,aAII,cAAe,CAJnB,gBAOM,aAAc,CCRpB,KACE,mCAAqC,CACtC,GAGC,oBAAqB,CACrB,gBAAiB,CACjB,eAAgB,CACjB,oCAIC,GACE,cAAe,CAChB,GAGC,cAAe,CAChB,CNoDC,4BM/CF,KACE,iBAAkB,CACnB","file":"main.9e80e43e.chunk.css","sourcesContent":["@import \"themes\";\n\n.header {\n  font-weight: 800;\n\n  .resume-button {\n    @include themed() {\n      background: t(\"secondary-color\");\n    }\n    font-weight: 700;\n    border-radius: 1.25rem;\n    border-color: transparent;\n  }\n  .resume-button:hover {\n    opacity: .75;\n  }\n}","// Inspired by:\n// https://medium.com/@katiemctigue/how-to-create-a-dark-mode-in-sass-609f131a3995\n// https://medium.com/@dmitriy.borodiy/easy-color-theming-with-scss-bc38fd5734d1\n\n$themes: (\n  light: (\n    secondary-color:#0e49b5\n  ),\n  dark: (\n    secondary-color:green\n  ),\n);\n\n@mixin themed() {\n  @each $theme, $map in $themes {\n    .theme-#{$theme} & {\n      $theme-map: () !global;\n      @each $key, $submap in $map {\n        $value: map-get(map-get($themes, $theme), '#{$key}');\n        $theme-map: map-merge($theme-map, ($key: $value)) !global;\n      }\n      @content;\n      $theme-map: null !global;\n    }\n  }\n}\n\n@function t($key) {\n  @return map-get($theme-map, $key);\n}","@import \"bootstrap\";\n@import \"themes\";\n@import \"global\";\n\n#about {\n  margin-top: 5%;\n}\n\n.about-waleed-img {\n  display: block;\n  margin: auto;\n  @include themed() {\n    border: 0.5rem solid t(\"secondary-color\");\n  }\n}\n\n.about-intro {\n  br {\n    display: none;\n  }\n}\n\n.about-secondary-color {\n  @include themed() {\n    color: t(\"secondary-color\");\n  }\n}\n\n// Bootstrap breakpoint to optimize when layout changes\n@include media-breakpoint-down(md) {\n  .about-intro {\n    margin-top: 5%;\n    padding-left: 10%;\n    padding-right: 10%;\n  }\n}\n\n// Breakpoint to ensure TypeWriter text never overflows to newline\n@media screen and (max-width: 1362px) {\n  .about-intro {\n    br {\n      display: inline-block;\n    }\n  }\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n","@import \"bootstrap\";\n@import \"themes\";\n@import \"global\";\n\n#skills {\n  margin-top: $spacing-between-sections;\n\n  h1 {\n    margin-left: 5%;\n  \n    hr {\n      margin-top: 3%;\n    }\n  }\n\n  h2 {\n    font-size: 1.5rem;\n  }\n}\n\n.skill-cards {\n  margin-left: 5%;\n  margin-right: 5%;\n}\n\n.skill-card {\n  height: 100%;\n}\n\n.badge-pill {\n  font-size: 1.2rem;\n  margin: 1%;\n  @include themed() {\n    background-color: t(\"secondary-color\");\n  }\n}\n\n@include media-breakpoint-down(md) {\n  .skill-cards {\n    .col-md-12 {\n      margin-bottom: 30px;\n    }\n  }\n}\n\n@include media-breakpoint-down(sm) {\n  .skill-cards {\n    .middle-card {\n      margin-bottom: 30px;\n    }\n  }\n}\n\n@media screen and (max-width: $max-width-font-reduce) {\n  .badge-pill {\n    font-size: 0.8rem;\n  }\n\n  #skills {\n    h2 {\n      font-size: 1rem;\n    }\n  }\n}","$max-width-font-reduce: 589px;\n$spacing-between-sections: 5%;","@import \"bootstrap\";\n@import \"themes\";\n@import \"global\";\n\n.experience-carousel {\n  .arrow-col {\n    display: flex;\n    align-items: center;\n  }\n  .arrow-col:hover {\n    .arrow {\n      opacity: .5;\n    }\n  }\n\n  .arrow {\n    @include themed() {\n      color: t(\"secondary-color\");\n    }\n    margin: auto;\n  }\n\n  .fade-left-enter {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n  .fade-left-enter-active {\n    opacity: 1;\n    transform: translateX(0%);\n  }\n  .fade-left-exit {\n    opacity: 1;\n    transform: translateX(0%);\n  }\n  .fade-left-exit-active {\n    opacity: 0;\n    transform: translateX(-100%);\n  }\n\n  .fade-right-enter {\n    opacity: 0;\n    transform: translateX(-100%);\n  }\n  .fade-right-enter-active {\n    opacity: 1;\n    transform: translateX(0%);\n  }\n  .fade-right-exit {\n    opacity: 1;\n    transform: translateX(0%);\n  }\n  .fade-right-exit-active {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n\n  .fade-left-enter-active,\n  .fade-left-exit-active,\n  .fade-right-enter-active,\n  .fade-right-exit-active {\n    transition: opacity 250ms, transform 250ms;\n  }\n\n  .map-marker {\n    margin-left: 20%;\n  }\n\n  .calendar, .map-marker {\n    margin-right: 10px;\n  }\n\n  .position-title {\n    font-weight: 600;\n  }\n\n  .company-name {\n    @include themed() {\n      color: t(\"secondary-color\");\n    }\n  }\n\n  .experience-bullets {\n    margin-top: 20px;\n  }\n\n  .company-logo-col {\n    display: flex;\n    align-items: center;\n  }\n\n  .company-logo {\n    margin: auto;\n    max-height: 120px;\n    width: auto;\n  }\n}\n","@import \"bootstrap\";\n@import \"themes\";\n@import \"global\";\n\n#experience {\n  margin-top: $spacing-between-sections;\n\n  h1 {\n    margin-left: 5%;\n  \n    hr {\n      margin-top: 3%;\n    }\n  }\n}","@import \"bootstrap\";\n@import \"themes\";\n@import \"global\";\n\n#projects {\n  margin-top: $spacing-between-sections;\n\n  h1 {\n    margin-left: 5%;\n  \n    hr {\n      margin-top: 3%;\n    }\n  }\n}","@import \"bootstrap\";\n@import \"global\";\n\nbody {\n  font-family: \"Montserrat\", sans-serif;\n}\n\nh1 {\n  display: inline-block;\n  font-size: 3.5rem;\n  font-weight: 800;\n}\n\n// Reduce font size for smaller screens (mobile)\n@media screen and (max-width: $max-width-font-reduce) {\n  h1 {\n    font-size: 2rem;\n  }\n\n  h2 {\n    font-size: 1rem;\n  }\n}\n\n// Center align everything on medium screens and down\n@include media-breakpoint-down(md) {\n  body {\n    text-align: center;\n  }\n}"]}